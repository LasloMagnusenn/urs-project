/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface IHelperInterface extends utils.Interface {
  functions: {
    "advancedBulkEnterInGame(uint8,uint256,uint256[])": FunctionFragment;
    "advancedBulkEnterInGameWithPlace(uint8,uint256,uint256[],uint256[])": FunctionFragment;
    "bulkEnterInBlackRoom(uint256[])": FunctionFragment;
    "checkInMemoryArray(uint256[],uint256)": FunctionFragment;
    "generateRandomWinnerIndex(uint256)": FunctionFragment;
    "generateRandomWinnerIndexInBlackRoom(uint256)": FunctionFragment;
    "generateWinnersForBlackRoom(uint256)": FunctionFragment;
    "getRandomSuit(uint256)": FunctionFragment;
    "getRandomSuitForTrump(uint256)": FunctionFragment;
    "leaveBlackTable(uint256[])": FunctionFragment;
    "leaveGame(uint8,uint256,uint256[])": FunctionFragment;
    "pushSuitsInTable(uint8,uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "advancedBulkEnterInGame"
      | "advancedBulkEnterInGameWithPlace"
      | "bulkEnterInBlackRoom"
      | "checkInMemoryArray"
      | "generateRandomWinnerIndex"
      | "generateRandomWinnerIndexInBlackRoom"
      | "generateWinnersForBlackRoom"
      | "getRandomSuit"
      | "getRandomSuitForTrump"
      | "leaveBlackTable"
      | "leaveGame"
      | "pushSuitsInTable"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "advancedBulkEnterInGame",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "advancedBulkEnterInGameWithPlace",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkEnterInBlackRoom",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "checkInMemoryArray",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "generateRandomWinnerIndex",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "generateRandomWinnerIndexInBlackRoom",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "generateWinnersForBlackRoom",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getRandomSuit",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getRandomSuitForTrump",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "leaveBlackTable",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "leaveGame",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "pushSuitsInTable",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "advancedBulkEnterInGame",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "advancedBulkEnterInGameWithPlace",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkEnterInBlackRoom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkInMemoryArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "generateRandomWinnerIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "generateRandomWinnerIndexInBlackRoom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "generateWinnersForBlackRoom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRandomSuit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRandomSuitForTrump",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "leaveBlackTable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "leaveGame", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pushSuitsInTable",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IHelper extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IHelperInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    advancedBulkEnterInGame(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    advancedBulkEnterInGameWithPlace(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _placeIndexes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    bulkEnterInBlackRoom(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    checkInMemoryArray(
      tempArr: PromiseOrValue<BigNumberish>[],
      _currentIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    generateRandomWinnerIndex(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    generateRandomWinnerIndexInBlackRoom(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    generateWinnersForBlackRoom(
      _salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getRandomSuit(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getRandomSuitForTrump(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    leaveBlackTable(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    leaveGame(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    pushSuitsInTable(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  advancedBulkEnterInGame(
    _roomLevel: PromiseOrValue<BigNumberish>,
    _table: PromiseOrValue<BigNumberish>,
    _tokenIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  advancedBulkEnterInGameWithPlace(
    _roomLevel: PromiseOrValue<BigNumberish>,
    _table: PromiseOrValue<BigNumberish>,
    _tokenIds: PromiseOrValue<BigNumberish>[],
    _placeIndexes: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  bulkEnterInBlackRoom(
    _tokenIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  checkInMemoryArray(
    tempArr: PromiseOrValue<BigNumberish>[],
    _currentIndex: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  generateRandomWinnerIndex(
    salt: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  generateRandomWinnerIndexInBlackRoom(
    salt: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  generateWinnersForBlackRoom(
    _salt: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getRandomSuit(
    salt: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getRandomSuitForTrump(
    salt: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  leaveBlackTable(
    _tokenIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  leaveGame(
    _roomLevel: PromiseOrValue<BigNumberish>,
    _table: PromiseOrValue<BigNumberish>,
    _tokenIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  pushSuitsInTable(
    _roomLevel: PromiseOrValue<BigNumberish>,
    _table: PromiseOrValue<BigNumberish>,
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    advancedBulkEnterInGame(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    advancedBulkEnterInGameWithPlace(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _placeIndexes: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    bulkEnterInBlackRoom(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    checkInMemoryArray(
      tempArr: PromiseOrValue<BigNumberish>[],
      _currentIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    generateRandomWinnerIndex(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    generateRandomWinnerIndexInBlackRoom(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    generateWinnersForBlackRoom(
      _salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getRandomSuit(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRandomSuitForTrump(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    leaveBlackTable(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    leaveGame(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    pushSuitsInTable(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    advancedBulkEnterInGame(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    advancedBulkEnterInGameWithPlace(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _placeIndexes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    bulkEnterInBlackRoom(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    checkInMemoryArray(
      tempArr: PromiseOrValue<BigNumberish>[],
      _currentIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    generateRandomWinnerIndex(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    generateRandomWinnerIndexInBlackRoom(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    generateWinnersForBlackRoom(
      _salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRandomSuit(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRandomSuitForTrump(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    leaveBlackTable(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    leaveGame(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    pushSuitsInTable(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    advancedBulkEnterInGame(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    advancedBulkEnterInGameWithPlace(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _placeIndexes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    bulkEnterInBlackRoom(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    checkInMemoryArray(
      tempArr: PromiseOrValue<BigNumberish>[],
      _currentIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    generateRandomWinnerIndex(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    generateRandomWinnerIndexInBlackRoom(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    generateWinnersForBlackRoom(
      _salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRandomSuit(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRandomSuitForTrump(
      salt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    leaveBlackTable(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    leaveGame(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    pushSuitsInTable(
      _roomLevel: PromiseOrValue<BigNumberish>,
      _table: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
